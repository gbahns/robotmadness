generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(uuid())
  email       String       @unique
  username    String       @unique
  name        String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  hostedGames Game[]       @relation("HostedGames")
  wonGames    Game[]       @relation("WonGames")
  gamesPlayed GamePlayer[]
}

model Game {
  id            String       @id @default(uuid())
  roomCode      String       @unique @default(cuid())
  name          String?
  hostId        String?
  boardName     String?
  courseName    String?
  maxPlayers    Int          @default(8)
  isPrivate     Boolean      @default(false)
  startedAt     DateTime?
  endedAt       DateTime?
  winnerId      String?
  finalResults  Json?
  totalDuration Int?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  host          User?        @relation("HostedGames", fields: [hostId], references: [id])
  winner        User?        @relation("WonGames", fields: [winnerId], references: [id])
  players       GamePlayer[]

  @@index([roomCode])
  @@index([hostId])
}

model GamePlayer {
  id              String   @id @default(uuid())
  gameId          String
  userId          String
  robotColor      String?
  startingDock    Int?
  joinedAt        DateTime @default(now())
  finalPosition   Int?
  flagsReached    Int?
  livesRemaining  Int?
  finalDamage     Int?
  robotsDestroyed Int?
  game            Game     @relation(fields: [gameId], references: [id], onDelete: Cascade)
  user            User     @relation(fields: [userId], references: [id])

  @@unique([gameId, userId])
  @@unique([gameId, startingDock])
  @@index([gameId])
  @@index([userId])
}
